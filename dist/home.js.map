{"mappings":"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","sources":["<anon>","src/home/servicesList.js","src/home.js","src/home/brandCoreText.js","src/home/heroSequence.js","src/modules/setLinesWrapper.js","src/home/caseStudies.js","src/home/caseStudiesSlider.js","src/home/caseStudiesProgress.js"],"sourcesContent":["(() => {\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire5d03\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire5d03\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"71MPf\", function(module, exports) {\n\n$parcel$export(module.exports, \"initServicesList\", () => $51de802038f49ab9$export$22e75ef7dd469ed8);\n// import { setLinesWrapper } from \"../modules/setLinesWrapper\";\nfunction $51de802038f49ab9$export$22e75ef7dd469ed8() {\n    const servicesItems = document.querySelectorAll(\".services-list-item\");\n    if (!servicesItems) return;\n    servicesItems.forEach((item)=>{\n        const line = item.querySelector(\".services-list-item-line\"), heading = item.querySelector(\"h3\"), description = item.querySelector(\".services-list-item-description > p\"), button = item.querySelector(\".button\");\n        let headingEls, descriptionEls;\n        SplitText.create(heading, {\n            type: \"lines, words\",\n            mask: \"lines\",\n            wordsClass: \"word\",\n            linesClass: \"line\",\n            autoSplit: true,\n            onSplit: (self)=>{\n                headingEls = heading.querySelectorAll(\".word\");\n                gsap.set(headingEls, {\n                    yPercent: 100\n                });\n            }\n        });\n        // const headingLines = new SplitType(heading, {\n        //   types: \"lines, words\",\n        //   tagName: \"span\",\n        // });\n        SplitText.create(description, {\n            type: \"lines\",\n            mask: \"lines\",\n            linesClass: \"line\",\n            autoSplit: true,\n            onSplit: (self)=>{\n                descriptionEls = description.querySelectorAll(\".line\");\n                gsap.set(descriptionEls, {\n                    yPercent: 100\n                });\n            }\n        });\n        // const descriptionLines = new SplitType(description, {\n        //   types: \"lines\",\n        //   tagName: \"span\",\n        // });\n        // setLinesWrapper(descriptionLines.lines, () => {\n        //   descriptionEls = description.querySelectorAll(\".line\");\n        //   gsap.set(descriptionEls, { yPercent: 100 });\n        // });\n        gsap.set(line, {\n            scaleX: 0\n        });\n        gsap.set(button, {\n            yPercent: 100\n        });\n        gsap.timeline({\n            scrollTrigger: {\n                trigger: item,\n                start: \"top bottom-=20%\",\n                onEnter: ()=>{\n                    const tl = gsap.timeline();\n                    tl.to(line, {\n                        scaleX: 1,\n                        duration: 0.5,\n                        ease: \"expo.out\"\n                    }).to(headingEls, {\n                        yPercent: 0,\n                        stagger: 0.1,\n                        duration: 0.5,\n                        ease: \"expo.out\"\n                    }, \"-=0.25\").to(descriptionEls, {\n                        yPercent: 0,\n                        stagger: 0.05,\n                        ease: \"expo.out\"\n                    }, \"-=0.25\").to(button, {\n                        yPercent: 0,\n                        duration: 0.3,\n                        ease: \"expo.out\"\n                    }, \"-=0.25\");\n                }\n            }\n        });\n    });\n}\n\n});\n\n// import { setLinesWrapper } from \"../modules/setLinesWrapper\";\n// Link timelines to scroll position\nfunction $e8430b869ad88317$var$createBrandCoreTrigger(triggerElement, words, isLast, isDelayedStagger, index) {\n    if (isDelayedStagger) {\n        const height = triggerElement.getBoundingClientRect().height / window.outerHeight;\n        words.forEach((word, i)=>{\n            const start = i * 20;\n            const end = start + 5;\n            gsap.fromTo(word, {\n                yPercent: 105\n            }, {\n                yPercent: 0,\n                ease: \"none\",\n                scrollTrigger: {\n                    trigger: triggerElement,\n                    scrub: true,\n                    start: `${start}% top`,\n                    end: `${end}% top`,\n                    markers: false,\n                    pin: false\n                }\n            });\n        });\n    } else gsap.fromTo(words, {\n        yPercent: 105\n    }, {\n        yPercent: 0,\n        stagger: 0.1,\n        ease: \"none\",\n        scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: \"top top\",\n            end: \"25% top\",\n            markers: false,\n            pin: false\n        }\n    });\n    if (!isLast) {\n        let start, end;\n        if (isDelayedStagger) {\n            const height = triggerElement.getBoundingClientRect().height / window.outerHeight;\n            start = \"70% top\";\n            end = \"75% top\";\n        } else {\n            start = \"40% top\";\n            end = \"50% top\";\n        }\n        gsap.fromTo(words, {\n            yPercent: 0\n        }, {\n            yPercent: -105,\n            stagger: 0.1,\n            ease: \"none\",\n            immediateRender: false,\n            scrollTrigger: {\n                trigger: triggerElement,\n                scrub: true,\n                start: start,\n                end: end,\n                markers: false,\n                pin: false\n            }\n        });\n    }\n    if (isLast) {\n        const button = triggerElement.querySelector(\".button\");\n        gsap.set(button, {\n            yPercent: 101\n        });\n        gsap.to(button, {\n            yPercent: 0,\n            ease: \"none\",\n            immediateRender: false,\n            scrollTrigger: {\n                trigger: triggerElement,\n                scrub: true,\n                start: \"top top\",\n                end: \"25% top\",\n                markers: false,\n                pin: false\n            }\n        });\n    }\n}\nfunction $e8430b869ad88317$export$a6972a2f8f6a85bb() {\n    // Split all words on the brand core section\n    SplitText.create(\".brand-core-text\", {\n        type: \"lines, words\",\n        mask: \"lines\",\n        wordsClass: \"word\",\n        linesClass: \"line\",\n        autoSplit: true,\n        onSplit: (self)=>{\n            gsap.set(\".brand-core-text .word\", {\n                yPercent: 100\n            });\n        }\n    });\n    // const brandCoreText = new SplitType(\".brand-core-text\", {\n    //   types: \"lines, words\",\n    //   tagName: \"span\",\n    // });\n    // setLinesWrapper(brandCoreText.lines, () => {\n    //   gsap.set(\".brand-core-text .word\", { yPercent: 100 });\n    // });\n    const sections = document.querySelectorAll(\".brand-core-step\");\n    sections.forEach((section, i)=>{\n        const isDelayedStagger = section.classList.contains(\"_03\");\n        const words = section.querySelectorAll(\".word\");\n        const isLast = i === sections.length - 1;\n        $e8430b869ad88317$var$createBrandCoreTrigger(section, words, isLast, isDelayedStagger, i);\n    });\n}\n\n\nfunction $1c7845f0e1de0887$export$8f060496e19d4bbb(lines, callback) {\n    // Wrap each line in a .line-wrapper span\n    lines.forEach((line)=>{\n        const wrapper = document.createElement(\"span\");\n        wrapper.classList.add(\"line-wrapper\");\n        line.parentNode.insertBefore(wrapper, line);\n        wrapper.appendChild(line);\n    });\n    if (typeof callback === \"function\") callback();\n}\n\n\nfunction $4f8dd14eb30e4f23$export$985150dac2e59f14() {\n    SplitText.create(\".hero-subheadline\", {\n        type: \"lines\",\n        mask: \"lines\",\n        linesClass: \"line\",\n        autoSplit: true,\n        onSplit: (self)=>{\n            gsap.set(\".hero-line._02, .hero-line._03\", {\n                height: 0\n            });\n            gsap.set(\".header\", {\n                yPercent: -100\n            });\n            gsap.set(\".hero-video-bg\", {\n                opacity: 0\n            });\n            gsap.set(\".hero-subheadline .line\", {\n                yPercent: 100\n            });\n            gsap.set(\".section-reels\", {\n                marginTop: \"0rem\"\n            });\n        }\n    });\n    // const heroSubheadline = new SplitType(\".hero-subheadline p\", {\n    //   types: \"lines\",\n    //   tagName: \"span\",\n    // });\n    // setLinesWrapper(heroSubheadline.lines, () => {\n    // });\n    // gsap.set(\".reels-video-container\", { y: \"12rem\" });\n    const tl = gsap.timeline();\n    const heroVideo = document.querySelector(\".hero-video-bg video\");\n    // const reelsThumb = document.querySelector(\".reels-video-thumb\");\n    // reelsThumb.muted = true;\n    // reelsThumb.loop = true;\n    // reelsThumb.playsinline = true;\n    tl.to(\".hero-words-wrapper\", {\n        y: \"-33.33%\",\n        duration: 1,\n        delay: 0.5,\n        ease: \"expo.inOut\"\n    }).to(\".hero-words-wrapper\", {\n        y: \"-66.66%\",\n        duration: 1,\n        ease: \"expo.inOut\"\n    }).to(\".hero-line\", {\n        height: \"25vh\",\n        duration: 1,\n        ease: \"power4.inOut\"\n    }, 2.1).to(\".hero-line-spacer\", {\n        width: \"100%\",\n        duration: 1,\n        ease: \"power4.inOut\"\n    }).to(\".header\", {\n        yPercent: 0,\n        duration: 1,\n        ease: \"power4.inOut\"\n    }, \"-=1\").to(\".hero-subheadline .line\", {\n        yPercent: 0,\n        duration: 0.5,\n        ease: \"power4.Out\",\n        stagger: 0.05\n    }, \"-=0.5\").to(\".hero-video-bg\", {\n        opacity: \"100%\",\n        duration: 0.5,\n        ease: \"power4.Out\",\n        onStart: ()=>{\n            heroVideo.play();\n        }\n    }, \"-=1.5\");\n    tl.to(\".section-reels\", {\n        marginTop: \"-12rem\",\n        duration: 0.5,\n        ease: \"power4.Out\",\n        onStart: ()=>{\n        // reelsThumb.play();\n        }\n    }, \"-=0.5\");\n}\n\n\nfunction $1dba3710f09b7657$export$e8ae5caf6764b3bb() {\n    const caseStudies = document.querySelectorAll(\".case-study-item\");\n    const trigger = document.querySelector(\".case-studies-wrapper\");\n    if (!caseStudies) return;\n    // const mm = gsap.matchMedia();\n    // let maskSizeStart = \"0vw 0vw\";\n    // let maskSizeEnd = \"200vw 200vw\";\n    // mm.add(\"(min-width: 768px)\", () => {\n    //   // desktop\n    //   maskSizeStart = \"0vw 0vw\";\n    //   maskSizeEnd = \"200vw 200vw\";\n    // });\n    // mm.add(\"(max-width: 767px)\", () => {\n    //   // mobile\n    //   maskSizeStart = \"0vh 0vh\";\n    //   maskSizeEnd = \"200vh 200vh\";\n    // });\n    // Case Studies animations ======================================== //\n    caseStudies.forEach((el, i)=>{\n        const tl = gsap.timeline();\n        const projectId = el.dataset.project;\n        // const trigger = document.querySelector(\n        //   `.case-study-spacer[data-project=\"${projectId}\"]`\n        // );\n        const mask = el.querySelector(\".case-study-item-inner\");\n        const img = el.querySelector(\".case-study-item-img\");\n        if (i === 0) {\n            gsap.set(document.querySelector(\".case-studies-overlay\"), {\n                opacity: 1\n            });\n            gsap.set(document.querySelector(\".hero-video-bg-wrapper\"), {\n                opacity: 1\n            });\n            gsap.set(document.querySelector(\".case-studies-overlay-text\"), {\n                y: \"0rem\"\n            });\n            gsap.set(document.querySelectorAll(\".case-study-item-footer\"), {\n                opacity: 0\n            });\n            if (window.outerWidth > 767) {\n                const wrapper = document.querySelector(\".portfolio-sticky-wrapper\");\n                gsap.set(wrapper, {\n                    y: \"0rem\",\n                    width: \"30%\"\n                });\n                tl.to(wrapper, {\n                    ease: \"none\",\n                    // y: \"12rem\",\n                    width: \"100%\",\n                    scrollTrigger: {\n                        trigger: trigger,\n                        scrub: true,\n                        start: \"top bottom\",\n                        end: \"top top\"\n                    }\n                });\n            }\n            gsap.to(document.querySelectorAll(\".case-study-item-footer\"), {\n                ease: \"none\",\n                opacity: 1,\n                scrollTrigger: {\n                    trigger: trigger,\n                    scrub: true,\n                    start: \"top bottom\",\n                    end: \"top top\"\n                }\n            });\n            gsap.to(document.querySelector(\".case-studies-overlay\"), {\n                ease: \"none\",\n                opacity: 0,\n                scrollTrigger: {\n                    trigger: trigger,\n                    scrub: true,\n                    start: \"top bottom\",\n                    end: \"top center\",\n                    onLeave: ()=>{\n                        gsap.set(document.querySelector(\".case-studies-overlay\"), {\n                            display: \"none\"\n                        });\n                    },\n                    onEnterBack: ()=>{\n                        gsap.set(document.querySelector(\".case-studies-overlay\"), {\n                            display: \"block\"\n                        });\n                    }\n                }\n            });\n            gsap.to(document.querySelector(\".case-studies-overlay-text\"), {\n                ease: \"none\",\n                y: \"-10rem\",\n                scrollTrigger: {\n                    trigger: trigger,\n                    scrub: true,\n                    start: \"top bottom\",\n                    end: \"top center\"\n                }\n            });\n            gsap.to(document.querySelector(\".hero-video-bg-wrapper\"), {\n                ease: \"none\",\n                opacity: 0,\n                scrollTrigger: {\n                    trigger: document.querySelector(\".section-hero\"),\n                    scrub: true,\n                    start: \"top top\",\n                    end: \"bottom top\"\n                }\n            });\n            return;\n        }\n    // gsap.set(mask, {\n    //   maskImage:\n    //     \"radial-gradient(circle at 50% 50%, black 50%, rgba(0, 0, 0, 0) 65%)\",\n    //   maskRepeat: \"no-repeat\",\n    //   maskPosition: \"center\",\n    //   maskSize: maskSizeStart,\n    // });\n    // gsap.set(mask, { display: \"none\" });\n    // tl.to(mask, {\n    //   ease: \"none\",\n    //   maskSize: maskSizeEnd,\n    //   scrollTrigger: {\n    //     trigger: trigger,\n    //     scrub: true,\n    //     start: \"top bottom\",\n    //     end: \"100vh top\",\n    //   },\n    // });\n    // gsap.to(mask, {\n    //   scrollTrigger: {\n    //     trigger: trigger,\n    //     scrub: true,\n    //     start: \"top bottom\",\n    //     end: \"bottom top\",\n    //     onEnter: () => {\n    //       gsap.set(mask, { display: \"block\" });\n    //     },\n    //     onEnterBack: () => {\n    //       gsap.set(mask, { display: \"block\" });\n    //     },\n    //     onLeave: () => {\n    //       gsap.set(mask, { display: \"none\" });\n    //     },\n    //     onLeaveBack: () => {\n    //       gsap.set(mask, { display: \"none\" });\n    //     },\n    //   },\n    // });\n    // tl.from(img, {\n    //   scale: 1.2,\n    //   opacity: 0.5,\n    //   ease: \"none\",\n    //   scrollTrigger: {\n    //     trigger: trigger,\n    //     scrub: true,\n    //     start: \"top bottom\",\n    //     end: \"bottom center\",\n    //   },\n    // });\n    });\n}\n\n\nfunction $7930e0919590fadc$export$e771ae7f2004877f() {\n    const slider = document.querySelector(\".case-studies-wrapper\");\n    const slides = [\n        ...slider.querySelectorAll(\".case-study-item\")\n    ];\n    const nextBtn = document.querySelector(\".case-studies-controls .next\");\n    const prevBtn = document.querySelector(\".case-studies-controls .prev\");\n    const pagination = document.querySelector(\".case-studies-pagination\");\n    const mm = gsap.matchMedia();\n    let maskSizeStart = \"0vw 0vw\";\n    let maskSizeEnd = \"200vw 200vw\";\n    mm.add(\"(min-width: 768px)\", ()=>{\n        maskSizeStart = \"0vw 0vw\";\n        maskSizeEnd = \"200vw 200vw\";\n    });\n    mm.add(\"(max-width: 767px)\", ()=>{\n        maskSizeStart = \"0vh 0vh\";\n        maskSizeEnd = \"200vh 200vh\";\n    });\n    let current = 0;\n    // Create bullets\n    const bullets = slides.map((_, index)=>{\n        const bullet = document.createElement(\"div\");\n        bullet.classList.add(\"case-studies_bullet\");\n        if (index === 0) bullet.classList.add(\"is-active\");\n        bullet.addEventListener(\"click\", ()=>{\n            goToSlide(index);\n        });\n        pagination?.appendChild(bullet);\n        return bullet;\n    });\n    slides.forEach((slide, i)=>{\n        const mask = slide.querySelector(\".case-study-item-inner\");\n        const img = slide.querySelector(\".case-study-item-img\");\n        const targets = slide.querySelectorAll(\"[data-slider-stagger]\");\n        targets.forEach((el)=>{\n            SplitText.create(el, {\n                type: \"words\",\n                mask: \"words\",\n                wordsClass: \"word\",\n                autoSplit: true,\n                onSplit: (self)=>{\n                    if (i > 0) gsap.set(self.words, {\n                        yPercent: 100\n                    });\n                }\n            });\n        });\n        gsap.set(mask, {\n            maskImage: \"radial-gradient(circle at 50% 50%, black 50%, rgba(0, 0, 0, 0) 65%)\",\n            maskRepeat: \"no-repeat\",\n            maskPosition: \"center\",\n            maskSize: i === 0 ? maskSizeEnd : maskSizeStart\n        });\n        if (i > 0) {\n            gsap.set(mask, {\n                display: \"none\"\n            });\n            gsap.set(img, {\n                scale: 1.2\n            });\n        }\n    });\n    function updateBullets(index) {\n        bullets.forEach((b, i)=>{\n            b.classList.toggle(\"is-active\", i === index);\n        });\n    }\n    function animateTextIn(slide) {\n        const targets = slide.querySelectorAll(\"[data-slider-stagger] .word\");\n        gsap.to(targets, {\n            yPercent: 0,\n            duration: 0.5,\n            ease: \"power2.out\",\n            stagger: 0.06\n        });\n    }\n    function resetText(slide) {\n        const targets = slide.querySelectorAll(\"[data-slider-stagger] .word\");\n        gsap.set(targets, {\n            yPercent: 100\n        });\n    }\n    function goToSlide(index) {\n        if (index === current || gsap.isTweening(slides[current])) return;\n        const currentSlide = slides[current];\n        const currentMask = currentSlide.querySelector(\".case-study-item-inner\");\n        const nextSlide = slides[index];\n        const nextMask = nextSlide.querySelector(\".case-study-item-inner\");\n        const img = nextSlide.querySelector(\".case-study-item-img\");\n        gsap.killTweensOf([\n            currentSlide,\n            nextSlide\n        ]);\n        slides.forEach((slide)=>slide.classList.remove(\"is-current\"));\n        gsap.set(nextSlide, {\n            zIndex: 2\n        });\n        gsap.set(currentSlide, {\n            zIndex: 1\n        });\n        gsap.set(nextMask, {\n            display: \"block\",\n            maskSize: maskSizeStart\n        });\n        gsap.to(nextMask, {\n            maskSize: maskSizeEnd,\n            duration: 0.6,\n            onStart: ()=>{\n                nextSlide.classList.add(\"is-current\");\n                updateBullets(index);\n            },\n            onComplete: ()=>{\n                gsap.set(currentSlide, {\n                    zIndex: 1\n                });\n                gsap.set(currentMask, {\n                    display: \"none\"\n                });\n                resetText(currentSlide);\n                animateTextIn(nextSlide);\n                current = index;\n            }\n        });\n        gsap.to(img, {\n            scale: 1,\n            duration: 0.6,\n            ease: \"power2.out\"\n        });\n    }\n    function nextSlide() {\n        goToSlide((current + 1) % slides.length);\n    }\n    function prevSlide() {\n        goToSlide((current - 1 + slides.length) % slides.length);\n    }\n    nextBtn?.addEventListener(\"click\", ()=>{\n        nextSlide();\n    });\n    prevBtn?.addEventListener(\"click\", ()=>{\n        prevSlide();\n    });\n    gsap.set(slides, {\n        zIndex: 1\n    });\n    gsap.set(slides[0], {\n        zIndex: 2\n    });\n    slides[0].classList.add(\"is-current\");\n    animateTextIn(slides[0]);\n    goToSlide(0);\n}\n\n\n\nvar $71MPf = parcelRequire(\"71MPf\");\nfunction $36e8edfd77f3eacd$export$cdf0a0b4b9a28c5f() {\n    const wrapper = document.querySelector(\".case-studies-progress-inner\"), progressBar = document.querySelector(\".case-studies-progress\"), totalCaseStudies = document.querySelectorAll(\".case-study-item-link\").length, scroller = document.querySelector(\".case-studies-spacer\");\n    if (!progressBar || !totalCaseStudies) return;\n    gsap.fromTo(progressBar, {\n        scaleY: 0\n    }, {\n        scaleY: 1,\n        scrollTrigger: {\n            trigger: scroller,\n            start: \"top top\",\n            end: \"bottom bottom\",\n            scrub: true\n        }\n    });\n}\n\n\n// set hero sequence\n(0, $4f8dd14eb30e4f23$export$985150dac2e59f14)();\ndocument.fonts.ready.then(()=>{\n    // Brand Core section\n    ScrollTrigger.refresh();\n    (0, $e8430b869ad88317$export$a6972a2f8f6a85bb)();\n    // Set case studies logic\n    (0, $1dba3710f09b7657$export$e8ae5caf6764b3bb)();\n    (0, $7930e0919590fadc$export$e771ae7f2004877f)();\n    (0, $36e8edfd77f3eacd$export$cdf0a0b4b9a28c5f)();\n    (0, $71MPf.initServicesList)();\n});\n\n})();\n//# sourceMappingURL=home.js.map\n","// import { setLinesWrapper } from \"../modules/setLinesWrapper\";\n\nexport function initServicesList() {\n  const servicesItems = document.querySelectorAll(\".services-list-item\");\n\n  if (!servicesItems) {\n    return;\n  }\n\n  servicesItems.forEach((item) => {\n    const line = item.querySelector(\".services-list-item-line\"),\n      heading = item.querySelector(\"h3\"),\n      description = item.querySelector(\".services-list-item-description > p\"),\n      button = item.querySelector(\".button\");\n\n    let headingEls, descriptionEls;\n\n    SplitText.create(heading, {\n      type: \"lines, words\",\n      mask: \"lines\",\n      wordsClass: \"word\",\n      linesClass: \"line\",\n      autoSplit: true,\n      onSplit: (self) => {\n        headingEls = heading.querySelectorAll(\".word\");\n        gsap.set(headingEls, { yPercent: 100 });\n      },\n    });\n        \n    // const headingLines = new SplitType(heading, {\n    //   types: \"lines, words\",\n    //   tagName: \"span\",\n    // });\n\n    SplitText.create(description, {\n      type: \"lines\",\n      mask: \"lines\",\n      linesClass: \"line\",\n      autoSplit: true,\n      onSplit: (self) => {\n        descriptionEls = description.querySelectorAll(\".line\");\n        gsap.set(descriptionEls, { yPercent: 100 });\n      },\n    });\n\n    // const descriptionLines = new SplitType(description, {\n    //   types: \"lines\",\n    //   tagName: \"span\",\n    // });\n\n\n    // setLinesWrapper(descriptionLines.lines, () => {\n    //   descriptionEls = description.querySelectorAll(\".line\");\n    //   gsap.set(descriptionEls, { yPercent: 100 });\n    // });\n\n    gsap.set(line, { scaleX: 0 });\n    gsap.set(button, { yPercent: 100 });\n\n    gsap.timeline({\n      scrollTrigger: {\n        trigger: item,\n        start: \"top bottom-=20%\",\n        onEnter: () => {\n          const tl = gsap.timeline();\n          tl.to(line, {\n            scaleX: 1,\n            duration: 0.5,\n            ease: \"expo.out\",\n          })\n            .to(\n              headingEls,\n              {\n                yPercent: 0,\n                stagger: 0.1,\n                duration: 0.5,\n                ease: \"expo.out\",\n              },\n              \"-=0.25\"\n            )\n            .to(\n              descriptionEls,\n              {\n                yPercent: 0,\n                stagger: 0.05,\n                ease: \"expo.out\",\n              },\n              \"-=0.25\"\n            )\n            .to(\n              button,\n              {\n                yPercent: 0,\n                duration: 0.3,\n                ease: \"expo.out\",\n              },\n              \"-=0.25\"\n            );\n        },\n      },\n    });\n  });\n}\n","import { setBrandCoreText } from \"./home/brandCoreText\";\nimport { initHeroSection } from \"./home/heroSequence\";\nimport { initCaseStudies } from \"./home/caseStudies\";\nimport { initCaseStudiesSlider } from \"./home/caseStudiesSlider\";\nimport { initServicesList } from \"./home/servicesList\";\nimport { initCaseStudiesProgress } from \"./home/caseStudiesProgress\";\n\n// set hero sequence\ninitHeroSection();\ndocument.fonts.ready.then(() => {\n  // Brand Core section\n  ScrollTrigger.refresh();\n  setBrandCoreText();\n  // Set case studies logic\n  initCaseStudies();\n  initCaseStudiesSlider();\n  initCaseStudiesProgress();\n  initServicesList();\n});","// import { setLinesWrapper } from \"../modules/setLinesWrapper\";\n\n// Link timelines to scroll position\nfunction createBrandCoreTrigger(\n  triggerElement,\n  words,\n  isLast,\n  isDelayedStagger,\n  index\n) {\n  if (isDelayedStagger) {\n    const height = (triggerElement.getBoundingClientRect().height / window.outerHeight);\n    words.forEach((word, i) => {\n      const start = i * 20;\n      const end = start + 5;\n      gsap.fromTo(\n        word,\n        {\n          yPercent: 105,\n        },\n        {\n          yPercent: 0,\n          ease: \"none\",\n          scrollTrigger: {\n            trigger: triggerElement,\n            scrub: true,\n            start: `${start}% top`,\n            end: `${end}% top`,\n            markers: false,\n            pin: false,\n          },\n        }\n      );\n    });\n  } else {\n    gsap.fromTo(\n      words,\n      {\n        yPercent: 105,\n      },\n      {\n        yPercent: 0,\n        stagger: 0.1,\n        ease: \"none\",\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"top top\",\n          end: \"25% top\",\n          markers: false,\n          pin: false,\n        },\n      }\n    );\n  }\n\n  if (!isLast) {\n    let start, end;\n    if (isDelayedStagger) {\n      const height =\n      triggerElement.getBoundingClientRect().height / window.outerHeight;\n      start = \"70% top\";\n      end = \"75% top\";\n    } else {\n      start = \"40% top\";\n      end = \"50% top\";\n    }\n    gsap.fromTo(\n      words,\n      {\n        yPercent: 0,\n      },\n      {\n        yPercent: -105,\n        stagger: 0.1,\n        ease: \"none\",\n        immediateRender: false,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start,\n          end,\n          markers: false,\n          pin: false,\n        },\n      }\n    );\n  }\n\n  if (isLast) {\n    const button = triggerElement.querySelector(\".button\");\n    gsap.set(button, { yPercent: 101 });\n    gsap.to(\n      button,\n      {\n        yPercent: 0,\n        ease: \"none\",\n        immediateRender: false,\n        scrollTrigger: {\n          trigger: triggerElement,\n          scrub: true,\n          start: \"top top\",\n          end: \"25% top\",\n          markers: false,\n          pin: false,\n        },\n      }\n    );    \n  }\n}\n\nexport function setBrandCoreText() { \n  // Split all words on the brand core section\n  SplitText.create(\".brand-core-text\", {\n    type: \"lines, words\",\n    mask: \"lines\",\n    wordsClass: \"word\",\n    linesClass: \"line\",\n    autoSplit: true,\n    onSplit: (self) => {\n      gsap.set(\".brand-core-text .word\", { yPercent: 100 });\n    },\n  });\n  // const brandCoreText = new SplitType(\".brand-core-text\", {\n  //   types: \"lines, words\",\n  //   tagName: \"span\",\n  // });\n\n  // setLinesWrapper(brandCoreText.lines, () => {\n  //   gsap.set(\".brand-core-text .word\", { yPercent: 100 });\n  // });\n\n  const sections = document.querySelectorAll(\".brand-core-step\");\n\n  sections.forEach((section, i) => {\n    const isDelayedStagger = section.classList.contains(\"_03\");\n    const words = section.querySelectorAll(\".word\");\n    const isLast = i === sections.length - 1;\n    createBrandCoreTrigger(section, words, isLast, isDelayedStagger, i);\n  });\n}\n","import { setLinesWrapper } from \"../modules/setLinesWrapper\";\n\nexport function initHeroSection() {\n  SplitText.create(\".hero-subheadline\", {\n    type: \"lines\",\n    mask: \"lines\",\n    linesClass: \"line\",\n    autoSplit: true,\n    onSplit: (self) => {\n      gsap.set(\".hero-line._02, .hero-line._03\", { height: 0 });\n      gsap.set(\".header\", { yPercent: -100 });\n      gsap.set(\".hero-video-bg\", { opacity: 0 });\n      gsap.set(\".hero-subheadline .line\", { yPercent: 100 });\n      gsap.set(\".section-reels\", { marginTop: \"0rem\" });\n    },\n  });  \n  // const heroSubheadline = new SplitType(\".hero-subheadline p\", {\n  //   types: \"lines\",\n  //   tagName: \"span\",\n  // });\n\n  // setLinesWrapper(heroSubheadline.lines, () => {\n  // });\n\n  // gsap.set(\".reels-video-container\", { y: \"12rem\" });\n\n  const tl = gsap.timeline();\n  const heroVideo = document.querySelector(\".hero-video-bg video\");\n  // const reelsThumb = document.querySelector(\".reels-video-thumb\");\n  // reelsThumb.muted = true;\n  // reelsThumb.loop = true;\n  // reelsThumb.playsinline = true;\n\n  tl.to(\".hero-words-wrapper\", {\n    y: \"-33.33%\",\n    duration: 1,\n    delay: 0.5,\n    ease: \"expo.inOut\",\n  })\n    .to(\".hero-words-wrapper\", {\n      y: \"-66.66%\",\n      duration: 1,\n      ease: \"expo.inOut\",\n    })\n    .to(\n      \".hero-line\",\n      {\n        height: \"25vh\",\n        duration: 1,\n        ease: \"power4.inOut\",\n      },\n      2.1\n    )\n    .to(\".hero-line-spacer\", {\n      width: \"100%\",\n      duration: 1,\n      ease: \"power4.inOut\",\n    })\n    .to(\n      \".header\",\n      {\n        yPercent: 0,\n        duration: 1,\n        ease: \"power4.inOut\",\n      },\n      \"-=1\"\n    )\n    .to(\n      \".hero-subheadline .line\",\n      {\n        yPercent: 0,\n        duration: 0.5,\n        ease: \"power4.Out\",\n        stagger: 0.05,\n      },\n      \"-=0.5\"\n    )\n    .to(\n      \".hero-video-bg\",\n      {\n        opacity: \"100%\",\n        duration: 0.5,\n        ease: \"power4.Out\",\n        onStart: () => {\n          heroVideo.play();\n        },\n      },\n      \"-=1.5\"\n  );\n  \n  tl.to(\n    \".section-reels\",\n    {\n      marginTop: \"-12rem\",\n      duration: 0.5,\n      ease: \"power4.Out\",\n      onStart: () => {\n        // reelsThumb.play();\n      },\n    },\n    \"-=0.5\"\n  );\n}\n","export function setLinesWrapper(lines, callback) {\n  // Wrap each line in a .line-wrapper span\n  lines.forEach(line => {\n    const wrapper = document.createElement('span');\n    wrapper.classList.add('line-wrapper');\n    line.parentNode.insertBefore(wrapper, line);\n    wrapper.appendChild(line);\n  });\n\n  if (typeof callback === 'function') {\n    callback();\n  }\n}","export function initCaseStudies() {\n  const caseStudies = document.querySelectorAll(\".case-study-item\");\n  const trigger = document.querySelector(\".case-studies-wrapper\");\n\n  if (!caseStudies) {\n    return;\n  }\n\n  // const mm = gsap.matchMedia();\n  // let maskSizeStart = \"0vw 0vw\";\n  // let maskSizeEnd = \"200vw 200vw\";\n\n  // mm.add(\"(min-width: 768px)\", () => {\n  //   // desktop\n  //   maskSizeStart = \"0vw 0vw\";\n  //   maskSizeEnd = \"200vw 200vw\";\n  // });\n\n  // mm.add(\"(max-width: 767px)\", () => {\n  //   // mobile\n  //   maskSizeStart = \"0vh 0vh\";\n  //   maskSizeEnd = \"200vh 200vh\";\n  // });\n\n  // Case Studies animations ======================================== //\n  caseStudies.forEach((el, i) => {\n    const tl = gsap.timeline();\n    const projectId = el.dataset.project;\n    // const trigger = document.querySelector(\n    //   `.case-study-spacer[data-project=\"${projectId}\"]`\n    // );\n    const mask = el.querySelector(\".case-study-item-inner\");\n    const img = el.querySelector(\".case-study-item-img\");\n    \n    if (i === 0) {\n      gsap.set(document.querySelector(\".case-studies-overlay\"), {\n        opacity: 1,\n      });\n      gsap.set(document.querySelector(\".hero-video-bg-wrapper\"), {\n        opacity: 1,\n      });\n      gsap.set(document.querySelector(\".case-studies-overlay-text\"), {\n        y: \"0rem\",\n      });\n      gsap.set(document.querySelectorAll(\".case-study-item-footer\"), {opacity: 0});\n\n      if (window.outerWidth > 767) {\n        const wrapper = document.querySelector('.portfolio-sticky-wrapper');\n        gsap.set(wrapper, { y: \"0rem\", width: \"30%\" });\n\n        tl.to(wrapper, {\n        ease: \"none\",\n          // y: \"12rem\",\n          width: \"100%\",\n          scrollTrigger: {\n            trigger: trigger,\n            scrub: true,\n            start: \"top bottom\",\n            end: \"top top\",\n          },\n        });\n      }\n  \n      gsap.to(document.querySelectorAll(\".case-study-item-footer\"), {\n        ease: \"none\",\n        opacity: 1,\n        scrollTrigger: {\n          trigger: trigger,\n          scrub: true,\n          start: \"top bottom\",\n          end: \"top top\",\n        },\n      });\n\n      gsap.to(document.querySelector(\".case-studies-overlay\"), {\n        ease: \"none\",\n        opacity: 0,\n        scrollTrigger: {\n          trigger: trigger,\n          scrub: true,\n          start: \"top bottom\",\n          end: \"top center\",\n          onLeave: () => {\n            gsap.set(document.querySelector(\".case-studies-overlay\"), { display: \"none\" });\n          },\n          onEnterBack: () => {\n            gsap.set(document.querySelector(\".case-studies-overlay\"), { display: \"block\" });\n          },\n        },\n      });\n\n      gsap.to(document.querySelector(\".case-studies-overlay-text\"), {\n        ease: \"none\",\n        y: \"-10rem\",\n        scrollTrigger: {\n          trigger: trigger,\n          scrub: true,\n          start: \"top bottom\",\n          end: \"top center\",\n        },\n      });\n      gsap.to(document.querySelector(\".hero-video-bg-wrapper\"), {\n        ease: \"none\",\n        opacity: 0,\n        scrollTrigger: {\n          trigger: document.querySelector(\".section-hero\"),\n          scrub: true,\n          start: \"top top\",\n          end: \"bottom top\",\n        },\n      });\n\n      return;\n    }\n\n    // gsap.set(mask, {\n    //   maskImage:\n    //     \"radial-gradient(circle at 50% 50%, black 50%, rgba(0, 0, 0, 0) 65%)\",\n    //   maskRepeat: \"no-repeat\",\n    //   maskPosition: \"center\",\n    //   maskSize: maskSizeStart,\n    // });\n\n    // gsap.set(mask, { display: \"none\" });\n\n    // tl.to(mask, {\n    //   ease: \"none\",\n    //   maskSize: maskSizeEnd,\n    //   scrollTrigger: {\n    //     trigger: trigger,\n    //     scrub: true,\n    //     start: \"top bottom\",\n    //     end: \"100vh top\",\n    //   },\n    // });\n\n    // gsap.to(mask, {\n    //   scrollTrigger: {\n    //     trigger: trigger,\n    //     scrub: true,\n    //     start: \"top bottom\",\n    //     end: \"bottom top\",\n    //     onEnter: () => {\n    //       gsap.set(mask, { display: \"block\" });\n    //     },\n    //     onEnterBack: () => {\n    //       gsap.set(mask, { display: \"block\" });\n    //     },\n    //     onLeave: () => {\n    //       gsap.set(mask, { display: \"none\" });\n    //     },\n    //     onLeaveBack: () => {\n    //       gsap.set(mask, { display: \"none\" });\n    //     },\n    //   },\n    // });\n\n    // tl.from(img, {\n    //   scale: 1.2,\n    //   opacity: 0.5,\n    //   ease: \"none\",\n    //   scrollTrigger: {\n    //     trigger: trigger,\n    //     scrub: true,\n    //     start: \"top bottom\",\n    //     end: \"bottom center\",\n    //   },\n    // });\n  });\n}\n","export function initCaseStudiesSlider() {\n  const slider = document.querySelector(\".case-studies-wrapper\");\n  const slides = [...slider.querySelectorAll(\".case-study-item\")];\n  const nextBtn = document.querySelector(\".case-studies-controls .next\");\n  const prevBtn = document.querySelector(\".case-studies-controls .prev\");\n  const pagination = document.querySelector(\".case-studies-pagination\");\n\n  const mm = gsap.matchMedia();\n  let maskSizeStart = \"0vw 0vw\";\n  let maskSizeEnd = \"200vw 200vw\";\n\n  mm.add(\"(min-width: 768px)\", () => {\n    maskSizeStart = \"0vw 0vw\";\n    maskSizeEnd = \"200vw 200vw\";\n  });\n\n  mm.add(\"(max-width: 767px)\", () => {\n    maskSizeStart = \"0vh 0vh\";\n    maskSizeEnd = \"200vh 200vh\";\n  });\n\n  let current = 0;\n\n  // Create bullets\n  const bullets = slides.map((_, index) => {\n    const bullet = document.createElement(\"div\");\n    bullet.classList.add(\"case-studies_bullet\");\n    if (index === 0) bullet.classList.add(\"is-active\");\n    bullet.addEventListener(\"click\", () => {\n      goToSlide(index);\n    });\n    pagination?.appendChild(bullet);\n    return bullet;\n  });\n\n  slides.forEach((slide, i) => {\n    const mask = slide.querySelector(\".case-study-item-inner\");\n    const img = slide.querySelector(\".case-study-item-img\");\n    const targets = slide.querySelectorAll(\"[data-slider-stagger]\");\n    targets.forEach((el) => {\n      SplitText.create(el, {\n        type: \"words\",\n        mask: \"words\",\n        wordsClass: \"word\",\n        autoSplit: true,\n        onSplit: (self) => {\n          if (i > 0) {\n            gsap.set(self.words, { yPercent: 100 });\n          }\n        },\n      });\n    });\n\n    gsap.set(mask, {\n      maskImage:\n        \"radial-gradient(circle at 50% 50%, black 50%, rgba(0, 0, 0, 0) 65%)\",\n      maskRepeat: \"no-repeat\",\n      maskPosition: \"center\",\n      maskSize: i === 0 ? maskSizeEnd : maskSizeStart,\n    });\n\n    if (i > 0) {\n      gsap.set(mask, { display: \"none\" });\n      gsap.set(img, { scale: 1.2 });\n    }\n  });\n\n  function updateBullets(index) {\n    bullets.forEach((b, i) => {\n      b.classList.toggle(\"is-active\", i === index);\n    });\n  }\n\n  function animateTextIn(slide) {\n    const targets = slide.querySelectorAll(\"[data-slider-stagger] .word\");\n    gsap.to(targets, {\n      yPercent: 0,\n      duration: 0.5,\n      ease: \"power2.out\",\n      stagger: 0.06,\n    });\n  }\n\n  function resetText(slide) {\n    const targets = slide.querySelectorAll(\"[data-slider-stagger] .word\");\n    gsap.set(targets, { yPercent: 100 });\n  }\n\n  function goToSlide(index) {\n    if (index === current || gsap.isTweening(slides[current])) return;\n\n    const currentSlide = slides[current];\n    const currentMask = currentSlide.querySelector(\".case-study-item-inner\");\n    const nextSlide = slides[index];\n    const nextMask = nextSlide.querySelector(\".case-study-item-inner\");\n    const img = nextSlide.querySelector(\".case-study-item-img\");\n\n    gsap.killTweensOf([currentSlide, nextSlide]);\n    slides.forEach((slide) => slide.classList.remove(\"is-current\"));\n\n    gsap.set(nextSlide, { zIndex: 2 });\n    gsap.set(currentSlide, { zIndex: 1 });\n    gsap.set(nextMask, { display: \"block\", maskSize: maskSizeStart });\n\n    gsap.to(nextMask, {\n      maskSize: maskSizeEnd,\n      duration: 0.6,\n      onStart: () => {\n        nextSlide.classList.add(\"is-current\");\n        updateBullets(index);\n      },\n      onComplete: () => {\n        gsap.set(currentSlide, { zIndex: 1 });\n        gsap.set(currentMask, { display: \"none\" });\n\n        resetText(currentSlide);\n        animateTextIn(nextSlide);\n        current = index;\n      },\n    });\n\n    gsap.to(img, {\n      scale: 1,\n      duration: 0.6,\n      ease: \"power2.out\",\n    });\n  }\n\n  function nextSlide() {\n    goToSlide((current + 1) % slides.length);\n  }\n\n  function prevSlide() {\n    goToSlide((current - 1 + slides.length) % slides.length);\n  }\n\n  nextBtn?.addEventListener(\"click\", () => {\n    nextSlide();\n  });\n\n  prevBtn?.addEventListener(\"click\", () => {\n    prevSlide();\n  });\n\n  gsap.set(slides, { zIndex: 1 });\n  gsap.set(slides[0], { zIndex: 2 });\n  slides[0].classList.add(\"is-current\");\n  animateTextIn(slides[0]);\n  goToSlide(0);\n}\n","export function initCaseStudiesProgress() {\n  const wrapper = document.querySelector('.case-studies-progress-inner'),\n    progressBar = document.querySelector('.case-studies-progress'),\n    totalCaseStudies = document.querySelectorAll('.case-study-item-link').length,\n    scroller = document.querySelector('.case-studies-spacer');\n    \n  if (!progressBar || !totalCaseStudies) {\n    return;\n  }\n\n  gsap.fromTo(\n    progressBar,\n    { scaleY: 0 },\n    {\n      scaleY: 1,\n      scrollTrigger: {\n        trigger: scroller,\n        start: \"top top\",\n        end: \"bottom bottom\",\n        scrub: true\n      }\n    }\n  )\n}"],"names":["$parcel$global","$parcel$modules","$parcel$inits","parcelRequire","$71MPf","globalThis","id","exports","init","module","call","err","Error","code","register","parcelRegister","$51de802038f49ab9$export$22e75ef7dd469ed8","servicesItems","document","querySelectorAll","forEach","item","headingEls","descriptionEls","line","querySelector","heading","description","button","SplitText","create","type","mask","wordsClass","linesClass","autoSplit","onSplit","self","gsap","set","yPercent","scaleX","timeline","scrollTrigger","trigger","start","onEnter","tl","to","duration","ease","stagger","Object","defineProperty","get","s","enumerable","configurable","height","opacity","marginTop","heroVideo","y","delay","width","onStart","play","fonts","ready","then","ScrollTrigger","refresh","sections","section","i","isDelayedStagger","classList","contains","words","$e8430b869ad88317$var$createBrandCoreTrigger","triggerElement","isLast","index","getBoundingClientRect","window","outerHeight","word","fromTo","scrub","end","markers","pin","immediateRender","length","caseStudies","el","dataset","project","outerWidth","wrapper","onLeave","display","onEnterBack","slides","slider","nextBtn","prevBtn","pagination","mm","matchMedia","maskSizeStart","maskSizeEnd","add","current","bullets","map","_","bullet","createElement","addEventListener","goToSlide","appendChild","animateTextIn","slide","targets","isTweening","currentSlide","currentMask","nextSlide","nextMask","img","killTweensOf","remove","zIndex","maskSize","b","toggle","onComplete","resetText","scale","maskImage","maskRepeat","maskPosition","progressBar","totalCaseStudies","scroller","scaleY","initServicesList"],"version":3,"file":"home.js.map"}